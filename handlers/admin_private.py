from aiogram.types import Message
from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from database.orm_querry import orm_get_profile, orm_delete_report, orm_check_report, orm_ban
from filters.chat_types import ChatTypeFilter, IsAdmin
from handlers.user_private import AddProfile
from keyboards.reply import get_keyboard


admin_router = Router()
admin_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())


ADMIN_KB = get_keyboard(
    "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå",
    "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚úÖ",
    '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂–∞–ª–æ–±—Éüßê',
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(2, 1),
)


@admin_router.message(Command("admin"))
async def what_do_you_do(message: Message):
    await message.answer("–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=ADMIN_KB)


@admin_router.message(F.text.contains('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂–∞–ª–æ–±—Éüßê'))
async def check_report(message: Message, session: AsyncSession, state: FSMContext):
    try:
        report = await orm_check_report(session)
        profile = await orm_get_profile(session, report.report_id)
        await state.update_data(id=profile.id)
        await message.answer_photo(
                profile.photography,
                caption=f'''‚≠êÔ∏è–ò–º—è: <strong>{profile.name}, {profile.age}</strong> –ª–µ—Ç\n
üåÜ–°—Ç—Ä–∞–Ω–∞: <strong>{profile.country}</strong> 
üåá–ì–æ—Ä–æ–¥: <strong>{profile.city}</strong>
{profile.description}
{profile.id}
‚ùå–ñ–∞–ª–æ–±–∞: {report.report}''',
                reply_markup=get_keyboard(
                    '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå',
                    '–¢—É—Ç –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µüëç',
                    sizes=(1, 1)
                ))
        await orm_delete_report(session, report.id, report.report_id)
        await state.set_state(AddProfile.confirmation_report)
    except:
        await message.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∂–∞–ª–æ–± –Ω–µ—Çüßê')


@admin_router.message(AddProfile.confirmation_report, F.text)
async def confirmation_report(message: Message, session: AsyncSession, state: FSMContext):
    if message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå' or message.text == '–¢—É—Ç –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µüëç':
        if message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå':
            data = await state.get_data()
            await orm_ban(session, data['id'], 'block')
            await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω‚úÖ')
            await state.clear()
            await what_do_you_do(message)
        else:
            await state.clear()
            await what_do_you_do(message)
    elif message.text == "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚úÖ":
        data = await state.get_data()
        await orm_ban(session, data['id'], 'lock')
        await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω‚úÖ')
        await state.clear()
        await what_do_you_do(message)
    else:
        await message.answer('–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ')


@admin_router.message(F.text.contains("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
async def ban(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")
    await state.update_data(ban='block')
    await state.set_state(AddProfile.id_ban)


@admin_router.message(F.text.contains("–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
async def lock_user(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")
    await state.update_data(ban='lock')
    await state.set_state(AddProfile.id_ban)


@admin_router.message(AddProfile.id_ban, F.text)
async def ban_account(message: Message, session: AsyncSession, state: FSMContext):
    await state.update_data(id=message.text)
    data = await state.get_data()
    profile = await orm_get_profile(session, data['id'])
    if profile:
        await message.answer_photo(
            profile.photography,
            caption=f'''‚≠êÔ∏è–ò–º—è: <strong>{profile.name}, {profile.age}</strong> –ª–µ—Ç\n
üë´–ü–æ–ª: <strong>{profile.gender}</strong>
üåÜ–°—Ç—Ä–∞–Ω–∞: <strong>{profile.country}</strong> 
üåá–ì–æ—Ä–æ–¥: <strong>{profile.city}</strong>
{profile.description}
–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: <strong>{
            round(profile.all_grades / profile.count_grades, 2) if profile.count_grades != 0 else 0
            }</strong>
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫: <strong>{profile.count_grades}</strong>''',
            reply_markup=get_keyboard(
                '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå',
                "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚úÖ",
                '–¢—É—Ç –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µüëç',
                sizes=(2, 1),
            ))
        await state.set_state(AddProfile.confirmation_report)
    else:
        await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        await state.clear()
        await what_do_you_do(message)

